{% schema %}
  {
    "name": "Image Slider",
    "settings": [
      {
        "type": "range",
        "id": "autoplay_speed",
        "label": "Autoplay Speed (in seconds)",
        "min": 1,
        "max": 10,
        "step": 1,
        "default": 3
      },
      {
        "type": "range",
        "id": "section_padding_x",
        "label": "Side Padding (Desktop)",
        "min": 0,
        "max": 100,
        "step": 4,
        "default": 80
      },
      {
        "type": "range",
        "id": "section_padding_y",
        "label": "Top & Bottom Padding",
        "min": 0,
        "max": 100,
        "step": 4,
        "default": 0
      }
    ],
    "blocks": [
      {
        "type": "slide",
        "name": "Slide",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Slide Image"
          },
          {
            "type": "url",
            "id": "link",
            "label": "Image Link"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Image Slider",
        "category": "Custom"
      }
    ]
  }
  {% endschema %}
  
  <section
    class="image-slider-wrapper"
    style="padding: {{ section.settings.section_padding_y }}px {{ section.settings.section_padding_x }}px;"
  >
    <div class="slider-container relative">
      <div class="slider-track flex transition-all duration-500 ease-in-out">
        {% for block in section.blocks %}
          {% if block.settings.image %}
            <div class="slide min-w-full flex-shrink-0">
              <a href="{{ block.settings.link | default: '#' }}">
                <img
                  src="{{ block.settings.image | img_url: 'master' }}"
                  width="{{ block.settings.image.width }}"
                  height="{{ block.settings.image.height }}"
                  alt="{{ block.settings.image.alt | escape }}"
                  loading="lazy"
                  class="w-full h-auto object-cover aspect-[5/3] lg:aspect-[21/9]"
                />
              </a>
            </div>
          {% endif %}
        {% endfor %}
      </div>
  
      <!-- Pagination Dots -->
      <div class="dots text-center mt-2">
        {% for block in section.blocks %}
          <span class="dot inline-block mx-1 w-1.5 h-1 rounded-full bg-gray-400 cursor-pointer" data-index="{{ forloop.index0 }}"></span>
        {% endfor %}
      </div>
  
      <!-- Desktop Arrows -->
      <button id="prevBtn" class="hidden lg:flex prev absolute left-4 top-1/2 transform -translate-y-1/2 bg-white w-11 h-11 rounded-md justify-center items-center z-10 shadow-md">
      </button>
      <button id="nextBtn" class="hidden lg:flex next absolute right-4 top-1/2 transform -translate-y-1/2 bg-white w-11 h-11 rounded-md justify-center items-center z-10 shadow-md">
       
      </button>
    </div>
  </section>
  
  <style>
    .slider-container {
      overflow: hidden;
    }
  
    .dot.active {
      width: 12px;
      background-color: #242faa;
    }
  
    .dot {
      transition: all 0.3s ease;
    }
  </style>
  
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const track = document.querySelector('.slider-track');
      const dots = document.querySelectorAll('.dot');
      const slides = document.querySelectorAll('.slide');
      const prevBtn = document.getElementById('prevBtn');
      const nextBtn = document.getElementById('nextBtn');
  
      let current = 0;
      let interval = {{ section.settings.autoplay_speed | default: 3 }} * 1000;
  
      function updateSlider(index) {
        const width = slides[0].offsetWidth;
        track.style.transform = `translateX(-${index * width}px)`;
        dots.forEach(dot => dot.classList.remove('active'));
        if (dots[index]) dots[index].classList.add('active');
      }
  
      dots.forEach(dot => {
        dot.addEventListener('click', function () {
          current = parseInt(this.getAttribute('data-index'));
          updateSlider(current);
        });
      });
  
      prevBtn?.addEventListener('click', () => {
        current = (current - 1 + slides.length) % slides.length;
        updateSlider(current);
      });
  
      nextBtn?.addEventListener('click', () => {
        current = (current + 1) % slides.length;
        updateSlider(current);
      });
  
      setInterval(() => {
        current = (current + 1) % slides.length;
        updateSlider(current);
      }, interval);
  
      window.addEventListener('resize', () => updateSlider(current));
    });
  </script>
  